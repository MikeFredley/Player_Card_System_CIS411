<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>